<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-05T11:13:05 IST" name="Default suite" finished-at="2023-10-05T11:13:14 IST" duration-ms="9620">
    <groups>
    </groups>
    <test started-at="2023-10-05T11:13:05 IST" name="Default test" finished-at="2023-10-05T11:13:14 IST" duration-ms="9620">
      <class name="calc.testCases.CalcDemoTC.CalcTest">
        <test-method is-config="true" signature="setSuiteSetUp()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:05 IST" name="setSuiteSetUp" finished-at="2023-10-05T11:13:05 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setSuiteSetUp -->
        <test-method is-config="true" signature="beforeBaseClass(org.testng.ITestContext)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:05 IST" name="beforeBaseClass" finished-at="2023-10-05T11:13:05 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@377949f1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseClass -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:05 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:07 IST" duration-ms="1593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7f0a133d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:07 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:07 IST" duration-ms="458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[+]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:07 IST" name="afterMethod" finished-at="2023-10-05T11:13:07 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:07 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:08 IST" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@241fbec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:08 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:09 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:09 IST" name="afterMethod" finished-at="2023-10-05T11:13:09 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:09 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:10 IST" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@715fa8c5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:10 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:10 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:10 IST" name="afterMethod" finished-at="2023-10-05T11:13:10 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:10 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:11 IST" duration-ms="1039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@644a3add]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:11 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:12 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[*]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[28.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:12 IST" name="afterMethod" finished-at="2023-10-05T11:13:12 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:12 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:12 IST" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4b765e92]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:13 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:13 IST" duration-ms="328" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ Actual value is : 2.0 Expected value is : 3.0 did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  Actual value is : 2.0 Expected value is : 3.0 did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at calc.utility.reports.Reporter.logFail(Reporter.java:153)
at calc.utility.reports.Reporter.logIntoReport(Reporter.java:128)
at calc.wspages.calcDemo.WebCalcLoad.validateResult(WebCalcLoad.java:183)
at calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(CalcTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:13 IST" name="afterMethod" finished-at="2023-10-05T11:13:13 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="invokeWSTestcase(java.lang.reflect.Method, [Ljava.lang.Object;)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:13 IST" name="invokeWSTestcase" finished-at="2023-10-05T11:13:14 IST" duration-ms="1028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void calc.testCases.CalcDemoTC.CalcTest.VerifyCalcOperations(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4665428b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeWSTestcase -->
        <test-method signature="VerifyCalcOperations(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:14 IST" name="VerifyCalcOperations" data-provider="getData" finished-at="2023-10-05T11:13:14 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCalcOperations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:14 IST" name="afterMethod" finished-at="2023-10-05T11:13:14 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterBaseClass()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:14 IST" name="afterBaseClass" finished-at="2023-10-05T11:13:14 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:calc.testCases.CalcDemoTC.CalcTest@2812b107]" started-at="2023-10-05T11:13:14 IST" name="afterSuite" finished-at="2023-10-05T11:13:15 IST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- calc.testCases.CalcDemoTC.CalcTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
